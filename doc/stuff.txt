==============================================================================
                                                          *kitty-scrollback.api*

M.setup()                                                              *M.setup*


                                        *kitty-scrollback.api.close_or_quit_all*
M.quit_all()                                                        *M.quit_all*
    Attempt to gracefully quit Neovim. How do you exit vim? Why would you exit vim?


                                        *kitty-scrollback.api.close_or_quit_all*
M.close_or_quit_all()                                      *M.close_or_quit_all*
    If the current buffer is the paste buffer, then close the window
    If the current buffer is the scrollback buffer, then quitall
    Otherwise, no operation


                                          *kitty-scrollback.api.execute_command*
M.execute_command()                                          *M.execute_command*
    If the current buffer is the paste buffer, then quit and execute the paste
    window contents in Kitty. Otherwise, no operation


                                            *kitty-scrollback.api.paste_command*
M.paste_command()                                              *M.paste_command*
    If the current buffer is the paste buffer, then quit and paste the paste
    window contents to Kitty. Otherwise, no operation


                                            *kitty-scrollback.api.toggle_footer*
M.toggle_footer()                                              *M.toggle_footer*
    If the current buffer is the paste buffer, toggle the footer window
    open or closed. Otherwise, no operation


M.generate_kittens()                                        *M.generate_kittens*


M.checkhealth()                                                  *M.checkhealth*


==============================================================================
                                                 *kitty-scrollback.autocommands*

M.setup()                                                              *M.setup*


M.load_autocmds()                                              *M.load_autocmds*


M.set_paste_buffer_write_autocmd()            *M.set_paste_buffer_write_autocmd*


M.set_scrollback_buffer_enter_autocmd()  *M.set_scrollback_buffer_enter_autocmd*


M.set_paste_window_resized_autocmd()        *M.set_paste_window_resized_autocmd*


M.set_paste_window_closed()                          *M.set_paste_window_closed*


M.set_term_enter_autocmd()                            *M.set_term_enter_autocmd*


M.set_colorscheme_autocmd()                          *M.set_colorscheme_autocmd*


M.set_yank_post_autocmd()                              *M.set_yank_post_autocmd*


M.run_when_safestate_autocmd()                    *M.run_when_safestate_autocmd*


==============================================================================
                                                   *kitty-scrollback.footer_win*

M.setup()                                                              *M.setup*


M.footer_winopts()                                            *M.footer_winopts*


M.open_footer_window()                                    *M.open_footer_window*


==============================================================================
                                                       *kitty-scrollback.health*

M.setup()                                                              *M.setup*


M.check_nvim_version()                                    *M.check_nvim_version*


M.check_kitty_version()                                  *M.check_kitty_version*


M.check()                                                              *M.check*


KsbAdvice                                                            *KsbAdvice*

    Fields: ~
        {allow_remote_control}     (table)
        {listen_on}                (table)
        {kitty_shell_integration}  (table)
        {nvim_version}             (table)
        {kitty_version}            (table)


M.advice()                                                            *M.advice*

    Returns: ~
        (KsbAdvice)


M.is_valid_extent_keyword({extent})                  *M.is_valid_extent_keyword*

    Parameters: ~
        {extent}  (string)


==============================================================================
                                                   *kitty-scrollback.highlights*

KsbHighlights                                                    *KsbHighlights*
    see `:help nvim_set_hl()` for highlight group definition format

    Fields: ~
        {KittyScrollbackNvimNormal}               (table|nil)  status window Normal highlight group
        {KittyScrollbackNvimHeart}                (table|nil)  status window heart icon highlight group
        {KittyScrollbackNvimSpinner}              (table|nil)  status window spinner icon highlight group
        {KittyScrollbackNvimReady}                (table|nil)  status window ready icon highlight group
        {KittyScrollbackNvimKitty}                (table|nil)  status window kitty icon highlight group
        {KittyScrollbackNvimVim}                  (table|nil)  status window vim icon highlight group
        {KittyScrollbackNvimPasteWinNormal}       (table|nil)  paste window Normal highlight group
        {KittyScrollbackNvimPasteWinFloatBorder}  (table|nil)  paste window FloatBorder highlight group
        {KittyScrollbackNvimPasteWinFloatTitle}   (table|nil)  paste window FloatTitle highlight group

    See: ~
        |nvim_set_hl|


M.setup()                                                              *M.setup*


M.get_highlights_as_env()                              *M.get_highlights_as_env*
    Format nvim highlights to arguments passed to kitty launch command
    E.g., KittyScrollbackNvimVim with #188b25 to --env KITTY_SCROLLBACK_NVIM_VIM=#188b25

    Returns: ~
        (table)  of environment variable arguments


M.set_highlights()                                            *M.set_highlights*
    Set nvim default highlights


==============================================================================
                                                              *kitty-scrollback*

M.setup()                                                              *M.setup*
    Create commands for generating kitty-scrollback.nvim kitten configs


:KittyScrollbackGenerateKittens Generate Kitten commands used as reference for configuring `kitty.conf`

    See: ~
        |kitty.api.generate_kittens|

:KittyScrollbackGenerateKittens Run `:checkhealth kitty-scrollback` in the context of Kitty

    See: ~
        |kitty.api.checkhealth|

==============================================================================
                                                      *kitty-scrollback.keymaps*

M.setup()                                                              *M.setup*


M.set_buffer_local_keymaps()                        *M.set_buffer_local_keymaps*


==============================================================================
                                               *kitty-scrollback.kitty_commands*

M.setup()                                                              *M.setup*


                                    *M.send_paste_buffer_text_to_kitty_and_quit*
M.send_paste_buffer_text_to_kitty_and_quit()


M.close_kitty_loading_window()                    *M.close_kitty_loading_window*


                                    *M.signal_winchanged_to_kitty_child_process*
M.signal_winchanged_to_kitty_child_process()


M.signal_term_to_kitty_child_process()    *M.signal_term_to_kitty_child_process*


M.open_kitty_loading_window()                      *M.open_kitty_loading_window*


M.get_kitty_colors()                                        *M.get_kitty_colors*


M.send_text_to_clipboard()                            *M.send_text_to_clipboard*


M.try_detect_nerd_font()                                *M.try_detect_nerd_font*


==============================================================================
                                                       *kitty-scrollback.launch*

KsbKittyOpts                                                      *KsbKittyOpts*

    Fields: ~
        {shell_integration}                (table)
        {scrollback_fill_enlarged_window}  (boolean)
        {scrollback_lines}                 (integer)
        {scrollback_pager}                 (table)
        {scrollback_pager_history_size}    (integer)
        {allow_remote_control}             (string)   'password' | 'socket-only' | 'socket' | 'no' | 'n' | 'false' | 'yes' | 'y' | 'true'
        {listen_on}                        (string)


KsbKittyData                                                      *KsbKittyData*

    Fields: ~
        {scrolled_by}   (integer)  the number of lines currently scrolled in kitty
        {cursor_x}      (integer)  position of the cusor in the column in kitty
        {cursor_y}      (integer)  position of the cursor in the row in kitty
        {lines}         (integer)  the number of rows of the screen in kitty
        {columns}       (integer)  the number of columns of the screen in kitty
        {window_id}     (integer)  the id of the window to get scrollback text
        {ksb_dir}       (string)   the base runtime path of kitty-scrollback.nvim
        {config_files}  (table)


KsbPrivate                                                          *KsbPrivate*

    Fields: ~
        {orig_columns}         (number)
        {bufid}                (number|nil)
        {paste_bufid}          (number|nil)
        {kitty_loading_winid}  (number|nil)
        {kitty_colors}         (table)
        {kitty_data}           (KsbKittyData)
        {paste_winid}          (number|nil)
        {footer_winid}         (number|nil)
        {footer_bufid}         (number|nil)
        {pos}                  (table|nil)


KsbCallbacks                                                      *KsbCallbacks*

    Fields: ~
        {after_setup}   (fun(kitty_data:KsbKittyData,opts:KsbOpts)|nil)  callback executed after initializing kitty-scrollback.nvim
        {after_launch}  (fun(kitty_data:KsbKittyData,opts:KsbOpts)|nil)  callback executed after launch started to process the scrollback buffer
        {after_ready}   (fun(kitty_data:KsbKittyData,opts:KsbOpts)|nil)  callback executed after scrollback buffer is loaded and cursor is positioned


KsbKittyGetText                                                *KsbKittyGetText*

    Fields: ~
        {ansi}             (boolean)                                                                                                                             If true, the text will include the ANSI formatting escape codes for colors, bold, italic, etc.
        {clear_selection}  (boolean)                                                                                                                             If true, clear the selection in the matched window, if any.
        {extent}           (string|"screen"|"all"|"selection"|"first_cmd_output_on_screen"|"last_cmd_output"|"last_visited_cmd_output"|"last_non_empty_output")  What text to get. The default of screen means all text currently on the screen. all means all the screen+scrollback and selection means the currently selected text. first_cmd_output_on_screen means the output of the first command that was run in the window on screen. last_cmd_output means the output of the last command that was run in the window. last_visited_cmd_output means the first command output below the last scrolled position via scroll_to_prompt. last_non_empty_output is the output from the last command run in the window that had some non empty output. The last four require shell_integration to be enabled. Choices: screen, all, first_cmd_output_on_screen, last_cmd_output, last_non_empty_output, last_visited_cmd_output, selection


KsbStatusWindowOpts                                        *KsbStatusWindowOpts*

    Fields: ~
        {enabled}       (boolean)  If true, show status window in upper right corner of the screen
        {style_simple}  (boolean)  If true, use plaintext instead of nerd font icons
        {autoclose}     (boolean)  If true, close the status window after kitty-scrollback.nvim is ready
        {show_timer}    (boolean)  If true, show a timer in the status window while kitty-scrollback.nvim is loading


KsbWinOpts                                                          *KsbWinOpts*

    Type: ~
        table<string,any>


KsbWinOptsOverrideFunction                          *KsbWinOptsOverrideFunction*

    Type: ~
        fun(paste_winopts:KsbWinOpts):KsbWinOpts


KsbFooterWinOptsOverrideFunction              *KsbFooterWinOptsOverrideFunction*

    Type: ~
        fun(footer_winopts:KsbWinOpts,paste_winopts:KsbWinOpts):KsbWinOpts


KsbPasteWindowOpts                                          *KsbPasteWindowOpts*

    Fields: ~
        {highlight_as_normal_win}   (fun():boolean|nil)                     If function returns true, use Normal highlight group. If false, use NormalFloat
        {filetype}                  (string|nil)                            The filetype of the paste window
        {hide_footer}               (boolean|nil)                           If true, hide the footer when the paste window is initially opened
        {winblend}                  (integer|nil)                           The winblend setting of the window, see :help winblend
        {winopts_overrides}         (KsbWinOptsOverrideFunction|nil)        Paste float window overrides, see nvim_open_win() for configuration
        {footer_winopts_overrides}  (KsbFooterWinOptsOverrideFunction|nil)  Paste footer window overrides, see nvim_open_win() for configuration


KsbOpts                                                                *KsbOpts*

    Fields: ~
        {callbacks}            (KsbCallbacks|nil)         fire and forget callback functions
        {keymaps_enabled}      (boolean|nil)              if true, enabled all default keymaps
        {restore_options}      (boolean|nil)              if true, restore options that were modified while processing the scrollback buffer
        {highlight_overrides}  (KsbHighlights|nil)        kitty-scrollback.nvim highlight overrides
        {status_window}        (KsbStatusWindowOpts|nil)  options for status window indicating that kitty-scrollback.nvim is ready
        {paste_window}         (KsbPasteWindowOpts|nil)   options for paste window that sends commands to Kitty
        {kitty_get_text}       (KsbKittyGetText|nil)      options passed to get-text when reading scrollback buffer, see `kitty @ get-text --help`
        {checkhealth}          (boolean|nil)              if true execute :checkhealth kitty-scrollback and skip setup


M.setup({kitty_data_str})                                              *M.setup*
    Setup and configure kitty-scrollback.nvim

    Parameters: ~
        {kitty_data_str}  (string)


M.launch()                                                            *M.launch*
    Launch kitty-scrollack.nvim with configured scrollback buffer


M.setup_and_launch({kitty_data_str})                        *M.setup_and_launch*
    Setup and launch kitty-scrollback.nvim

    Parameters: ~
        {kitty_data_str}  (string)


==============================================================================
                                                         *kitty-scrollback.util*

M.setup()                                                              *M.setup*


M.hexToRgb({c})                                                     *M.hexToRgb*

    Parameters: ~
        {c}  (string)


                                                                       *M.blend*
M.blend({foreground}, {background}, {alpha})

    Parameters: ~
        {foreground}  (string)         foreground color
        {background}  (string)         background color
        {alpha}       (number|string)  number between 0 and 1. 0 results in bg, 1 results in fg


M.darken()                                                            *M.darken*


M.screaming_snakecase({s})                               *M.screaming_snakecase*
    Convert camelCase to SCREAMING_SNAKECASE

    Parameters: ~
        {s}  (string)

    Returns: ~
        (string)


M.remove_process_exited()                              *M.remove_process_exited*


M.nvim_version_tostring()                              *M.nvim_version_tostring*


==============================================================================
                                                      *kitty-scrollback.windows*

M.setup()                                                              *M.setup*


M.size()                                                                *M.size*


M.paste_winopts()                                              *M.paste_winopts*


M.open_paste_window()                                      *M.open_paste_window*


M.show_status_window()                                    *M.show_status_window*


vim:tw=78:ts=8:noet:ft=help:norl:
